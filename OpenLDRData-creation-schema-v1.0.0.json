

IF EXISTS(select * from sys.databases where name='OpenLDRData')
BEGIN
	EXEC msdb.dbo.sp_delete_database_backuphistory @database_name = N'OpenLDRData'
	ALTER DATABASE [OpenLDRData] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
	DROP DATABASE [OpenLDRData]
END
GO

CREATE DATABASE [OpenLDRData] 
COLLATE SQL_Latin1_General_CP1_CI_AS;
GO

USE [OpenLDRData]
GO
/****** Object:  UserDefinedFunction [dbo].[GetAgeGroup]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetAgeGroup]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

CREATE FUNCTION [dbo].[GetAgeGroup] (@InString Int)
RETURNS nvarchar(64)
WITH EXECUTE AS CALLER
AS
BEGIN
    -- notice the spaces before the age groups to help with sorting
    DECLARE @OutString nvarchar(64);

    IF (@InString Is Null) BEGIN
        SET @OutString = ''No Age Specified'';
    END ELSE BEGIN
		SET @OutString = 
	        CASE 
			WHEN @InString < 2 THEN '' <2''
			WHEN @InString BETWEEN 2 and 5 THEN '' 2-5''
			WHEN @InString BETWEEN 6 and 14 THEN '' 6-14''
			WHEN @InString BETWEEN 15 and 49 THEN ''15-49''
			WHEN @InString >= 50 THEN ''50+''
			ELSE ''No Age Specified''
		    END;
    END;
	    
    RETURN(@OutString);

END;

' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[getHealthCareCode]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getHealthCareCode]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'-- =============================================
-- Author:		<Author,,Name>
-- ALTER date: <ALTER Date, ,>
-- Description:	<Description, ,>
-- =============================================
CREATE FUNCTION [dbo].[getHealthCareCode]
(
	-- Add the parameters for the function here
	@facilityCode varchar(20)
)
RETURNS VARCHAR(20)
AS
BEGIN
	-- Declare the return variable here
	DECLARE @healthAreaCode varchar(20)

	SELECT @healthAreaCode = HealthcareDistrictCode FROM OpenLDRDict.dbo.viewFacilities dict WHERE dict.FacilityCode = @facilityCode

	-- Return the result of the function
	RETURN @healthAreaCode

END


' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[GetReasonForTest]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GetReasonForTest]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[GetReasonForTest] (@InString nvarchar(1024))
RETURNS nvarchar(64)
WITH EXECUTE AS CALLER
AS
BEGIN
    
    DECLARE @OutString nvarchar(64);

    IF (@InString Is Null) BEGIN
        SET @OutString = ''Reason Not Specified'';
    END ELSE BEGIN
		SET @OutString = 
	        CASE 
			WHEN @InString = ''Nao Prenchido'' THEN ''Not Specified''
			WHEN @InString = ''Suspect treatment failure'' THEN ''Suspected treatment failure''
			WHEN @InString = ''Repiticas apos AMA'' THEN ''Repeat after breastfeeding''
			WHEN @InString = ''Rotina'' THEN ''Routine''
			WHEN @InString = '''' THEN ''Reason Not Specified''
			ELSE @InString
		    END;
    END;
	    
    RETURN(@OutString);

END;

' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[getRequestIDsWithUpdatedDateTimeStamp]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[getRequestIDsWithUpdatedDateTimeStamp]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

CREATE FUNCTION [dbo].[getRequestIDsWithUpdatedDateTimeStamp](@startDate date, @endDate date)
RETURNS @requestIDs TABLE (
   RequestID nvarchar(26) PRIMARY KEY CLUSTERED
) 
AS
BEGIN
	INSERT INTO @requestIDS
	SELECT Requests.RequestId
    FROM Requests LEFT JOIN LabResults ON Requests.RequestID = labResults.RequestID AND Requests.OBRSetID = LabResults.OBRSetID
    WHERE (
            (Requests.LIMSPanelCode = ''VIRAL'')
            OR (Requests.LIMSPanelCode = ''HIVVL'')
          )
    AND (
		(Requests.DateTimeStamp >= @startDate AND Requests.DateTimeStamp < @endDate)
		OR
		(LabResults.DateTimeStamp Is Not Null AND LabResults.DateTimeStamp >= @startDate AND LabResults.DateTimeStamp < @endDate)
		)
	GROUP BY Requests.RequestID;
 
   RETURN;
END;

' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[IfEmptyReturnValue]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[IfEmptyReturnValue]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'

CREATE FUNCTION [dbo].[IfEmptyReturnValue] (@InString nvarchar(1024), @ReturnIfEmpty nvarchar(1024))
RETURNS nvarchar(1024)
WITH EXECUTE AS CALLER
AS
BEGIN
	-- This function is a kind of override for IsNull in order to not only check for Null values but for empty strings
	-- It is definitely a bit slower so if you need it to run on a large data set and know the exact values you are trying to eliminate it might
	-- be best to do it direclty in the SQL or making this function more direct.
	-- SELECT dbo.IfEmptyReturnValue(Null,''00'');
	-- SELECT dbo.IfEmptyReturnValue('''',''00'');
	-- SELECT dbo.IfEmptyReturnValue(''    '',''00'');
	-- SELECT dbo.IfEmptyReturnValue(''a'',''00'');
    
    DECLARE @OutString nvarchar(1024);

    IF (@InString Is Null) BEGIN
        SET @OutString = @ReturnIfEmpty;
    END ELSE BEGIN
		SET @OutString = 
	        CASE LTRIM(RTRIM(@InString))
			WHEN '''' THEN @ReturnIfEmpty
			ELSE @InString
		    END;
    END;
	    
    RETURN(@OutString);

END;
' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[ufn_GetAgeGroupJSON]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ufn_GetAgeGroupJSON]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'CREATE FUNCTION [dbo].[ufn_GetAgeGroupJSON] (@alias nvarchar(50))
RETURNS nvarchar(1000)
AS
BEGIN
RETURN REPLACE(N''{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365) IS NULL","then":"''''N '''''''' Especif.''''","alias":"'' + @alias + ''"}
,{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365)  < 2","then":"''''< 2 Anos''''","alias":"'' + @alias + ''"}
,{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365)  <= 5","then":"''''2-5 Anos''''","alias":"'' + @alias + ''"}
,{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365)  <= 14","then":"''''6-14 Anos''''","alias":"'' + @alias + ''"}
,{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365)  <= 49","then":"''''15-49 Anos''''","alias":"'' + @alias + ''"}
,{"when":"COALESCE(Requests.AgeInYears, Requests.AgeInDays/365)  > 49","then":"''''>= 50 Anos''''","alias":"'' + @alias + ''"}
,{"else":"''''N '''''''' Especif.''''","alias":"'' + @alias + ''"}'', Char(13)+Char(10), '''')
END
' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[ViralLoadResultMerge]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ViralLoadResultMerge]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[ViralLoadResultMerge] (
				@HIVVL_Result nvarchar(1024),
				@LIMSCodedValue nvarchar(1024)
			--@PCR_ViralLoadCAPCTM nvarchar(1024)
			)
RETURNS nvarchar(1024)
WITH EXECUTE AS CALLER
AS
BEGIN
	-- This function examines four fields and returns a group the result belongs.
	-- The highest priority is given to the viral load result kicked off by the HIVVL panel and then viral load results kicked off by the PCR LIMSPanelCode
	-- Note that the PCR only results in the single result column PCR_ViralLoadCAPCTM <
    DECLARE @OutString nvarchar(1024);
	DECLARE @results TABLE(Code varchar(50), Value varchar(100))

	INSERT INTO @results VAlUES(''TND'',''Nivel de detecçao baixo''),(''LDL'', ''Nivel de detecçao baixo''),(''NEG'', ''Negativo''),(''POS'',''Positivo''),(''I'',''Indeterminado'')

	IF (@HIVVL_Result Is Null OR @HIVVL_Result = '''') BEGIN
		SELECT @OutString = ISNULL(Value, @LIMSCodedValue) FROM @results WHERE Code = @LIMSCodedValue
	END
	ELSE
	BEGIN
		SET @OutString = @HIVVL_Result
	END
		
	    
    RETURN(@OutString);

END;

' 
END

GO
/****** Object:  UserDefinedFunction [dbo].[ViralLoadResultRange]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ViralLoadResultRange]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'
CREATE FUNCTION [dbo].[ViralLoadResultRange] (
			@HIVVL_ViralLoadResult nvarchar(1024), 
			@HIVVL_ViralLoadCAPCTM nvarchar(1024)
			--@PCR_ViralLoadCAPCTM nvarchar(1024)
			)
RETURNS nvarchar(1024)
WITH EXECUTE AS CALLER
AS
BEGIN
	-- This function examines four fields and returns a group the result belongs.
	-- The highest priority is given to the viral load result kicked off by the HIVVL panel and then viral load results kicked off by the PCR LIMSPanelCode
	-- Note that the PCR only results in the single result column PCR_ViralLoadCAPCTM <
    DECLARE @OutString nvarchar(1024);

    IF (@HIVVL_ViralLoadResult Is Not Null) BEGIN
		-- Examinining the data for 2016 this means some variation on below detectable level is in this column
        SET @OutString = ''Suppressed'';
    END ELSE BEGIN

	    IF (@HIVVL_ViralLoadCAPCTM Is Not Null) BEGIN
			IF (IsNumeric( @HIVVL_ViralLoadCAPCTM ) = 1) BEGIN
				IF ( @HIVVL_ViralLoadCAPCTM  < 1000 ) BEGIN
					SET @OutString = ''Suppressed'';
				END ELSE BEGIN
					SET @OutString = ''Not Suppressed'';
				END;

			END ELSE BEGIN
				-- HIVVL_ViralLoadResult must be text
				IF ( @HIVVL_ViralLoadCAPCTM  = ''Positive'' ) BEGIN
					SET @OutString = ''Not Suppressed'';
				END ELSE BEGIN
					SET @OutString = 
						CASE @HIVVL_ViralLoadCAPCTM 
						WHEN ''Interminado'' THEN ''Indeterminate''
						WHEN ''Positive'' THEN ''Not Suppressed''
						ELSE ''Suppressed''
						END;
				END;
			END;

		END /*ELSE BEGIN
			-- @HIVVL_ViralLoadCAPCTM Is Null so Look at PCR results
			
		    IF (@PCR_ViralLoadCAPCTM Is Not Null) BEGIN

				IF (IsNumeric(@PCR_ViralLoadCAPCTM) = 1) BEGIN
					IF ( @PCR_ViralLoadCAPCTM  < 1000 ) BEGIN
						SET @OutString = ''Suppressed'';
					END ELSE BEGIN
						SET @OutString = ''Not Suppressed'';
					END;

				END ELSE BEGIN
					-- HIVVL_ViralLoadResult must be text
					IF ( @PCR_ViralLoadCAPCTM  = ''Positive'' ) BEGIN
						SET @OutString = ''Not Suppressed'';
					END ELSE BEGIN
						SET @OutString = 
							CASE @PCR_ViralLoadCAPCTM 
							WHEN ''Interminado'' THEN ''Indeterminate''
							WHEN ''Positive'' THEN ''Not Suppressed''
							ELSE ''Suppressed''
							END;
					END;
				END;

			END ELSE BEGIN 
				-- All three values are null so return ''Untested
				SET @OutString = ''Not Suppressed'';
			END;
		END;*/
		
    END;
	    
    RETURN(@OutString);

END;

' 
END

GO
/****** Object:  Table [dbo].[AdminScriptRun_LDRData]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AdminScriptRun_LDRData]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[AdminScriptRun_LDRData](
	[AdminScriptRunID] [int] IDENTITY(1,1) NOT NULL,
	[ScriptName] [nvarchar](255) NULL,
	[RunTime] [datetime] NULL,
 CONSTRAINT [aaaaaAdminScriptRunID_PK] PRIMARY KEY NONCLUSTERED 
(
	[AdminScriptRunID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[LabResults]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LabResults]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[LabResults](
	[DateTimeStamp] [datetime] NULL,
	[Versionstamp] [varchar](30) NULL,
	[LIMSDateTimeStamp] [datetime] NULL,
	[LIMSVersionStamp] [varchar](30) NULL,
	[RequestID] [varchar](26) NULL,
	[OBRSetID] [int] NULL,
	[OBXSetID] [int] NULL,
	[OBXSubID] [int] NULL,
	[LOINCCode] [varchar](30) NULL,
	[HL7ResultTypeCode] [varchar](2) NULL,
	[SIValue] [float] NULL,
	[SIUnits] [varchar](25) NULL,
	[SILoRange] [float] NULL,
	[SIHiRange] [float] NULL,
	[HL7AbnormalFlagCodes] [varchar](5) NULL,
	[DateTimeValue] [datetime] NULL,
	[CodedValue] [varchar](1) NULL,
	[ResultSemiquantitive] [int] NULL,
	[Note] [bit] NULL,
	[LIMSObservationCode] [varchar](10) NULL,
	[LIMSObservationDesc] [varchar](50) NULL,
	[LIMSRptResult] [varchar](80) NULL,
	[LIMSRptUnits] [varchar](25) NULL,
	[LIMSRptFlag] [varchar](25) NULL,
	[LIMSRptRange] [varchar](25) NULL,
	[LIMSCodedValue] [varchar](5) NULL,
	[WorkUnits] [float] NULL,
	[CostUnits] [float] NULL
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Monitoring]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Monitoring]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Monitoring](
	[DateTimeStamp] [datetime] NULL,
	[Versionstamp] [varchar](30) NULL,
	[LIMSDateTimeStamp] [datetime] NULL,
	[LIMSVersionstamp] [varchar](30) NULL,
	[RequestID] [varchar](26) NULL,
	[OBRSetID] [int] NULL,
	[OBXSetID] [int] NULL,
	[OBXSubID] [int] NULL,
	[LOINCCode] [varchar](30) NULL,
	[ORGANISM] [varchar](50) NULL,
	[SurveillanceCode] [varchar](5) NULL,
	[SpecimenDateTime] [datetime] NULL,
	[LIMSObservationCode] [varchar](25) NULL,
	[LIMSObservationDesc] [varchar](50) NULL,
	[LIMSOrganismGroup] [varchar](25) NULL,
	[CodedValue] [varchar](1) NULL,
	[ResultSemiquantitive] [int] NULL,
	[ResultNotConfirmed] [bit] NULL,
	[ResistantDrugs] [varchar](250) NULL,
	[IntermediateDrugs] [varchar](250) NULL,
	[SensitiveDrugs] [varchar](250) NULL,
	[MDRCode] [char](1) NULL
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Patients]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Patients]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Patients](
	[DateTimeStamp] [datetime] NULL,
	[Versionstamp] [varchar](30) NULL,
	[LIMSDateTimeStamp] [datetime] NULL,
	[LIMSVersionStamp] [varchar](30) NULL,
	[RequestID] [varchar](26) NULL,
	[REFNO] [varchar](56) NULL,
	[REGISTEREDDATE] [datetime] NULL,
	[LOCATION] [varchar](5) NULL,
	[WARD] [varchar](5) NULL,
	[HOSPID] [varchar](26) NULL,
	[NATIONALITY] [varchar](5) NULL,
	[NATIONALID] [varchar](26) NULL,
	[UNIQUEID] [varchar](31) NULL,
	[SURNAME] [varchar](31) NULL,
	[FIRSTNAME] [varchar](31) NULL,
	[INITIALS] [varchar](16) NULL,
	[REFDRCODE] [varchar](5) NULL,
	[REFDR] [varchar](41) NULL,
	[MEDAID] [varchar](5) NULL,
	[MEDAIDNO] [varchar](26) NULL,
	[BILLACCNO] [varchar](23) NULL,
	[TELHOME] [varchar](20) NULL,
	[TELWORK] [varchar](20) NULL,
	[MOBILE] [varchar](20) NULL,
	[EMAIL] [varchar](60) NULL,
	[DOB] [date] NULL,
	[DOBType] [varchar](25) NULL
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Requests]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Requests]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[Requests](
	[DateTimeStamp] [datetime] NULL,
	[Versionstamp] [varchar](30) NULL,
	[LIMSDateTimeStamp] [datetime] NULL,
	[LIMSVersionstamp] [varchar](30) NULL,
	[RequestID] [varchar](26) NULL,
	[OBRSetID] [int] NULL,
	[LOINCPanelCode] [varchar](10) NULL,
	[LIMSPanelCode] [varchar](10) NULL,
	[LIMSPanelDesc] [varchar](50) NULL,
	[HL7PriorityCode] [char](1) NULL,
	[SpecimenDateTime] [datetime] NULL,
	[RegisteredDateTime] [datetime] NULL,
	[ReceivedDateTime] [datetime] NULL,
	[AnalysisDateTime] [datetime] NULL,
	[AuthorisedDateTime] [datetime] NULL,
	[AdmitAttendDateTime] [datetime] NULL,
	[CollectionVolume] [float] NULL,
	[RequestingFacilityCode] [varchar](15) NULL,
	[ReceivingFacilityCode] [varchar](10) NULL,
	[LIMSPointOfCareDesc] [varchar](50) NULL,
	[RequestTypeCode] [varchar](3) NULL,
	[ICD10ClinicalInfoCodes] [varchar](50) NULL,
	[ClinicalInfo] [varchar](250) NULL,
	[HL7SpecimenSourceCode] [varchar](10) NULL,
	[LIMSSpecimenSourceCode] [varchar](10) NULL,
	[LIMSSpecimenSourceDesc] [varchar](50) NULL,
	[HL7SpecimenSiteCode] [varchar](10) NULL,
	[LIMSSpecimenSiteCode] [varchar](10) NULL,
	[LIMSSpecimenSiteDesc] [varchar](50) NULL,
	[WorkUnits] [float] NULL,
	[CostUnits] [float] NULL,
	[HL7SectionCode] [varchar](3) NULL,
	[HL7ResultStatusCode] [char](1) NULL,
	[RegisteredBy] [varchar](250) NULL,
	[TestedBy] [varchar](250) NULL,
	[AuthorisedBy] [varchar](250) NULL,
	[OrderingNotes] [varchar](250) NULL,
	[EncryptedPatientID] [nvarchar](64) NULL,
	[AgeInYears] [int] NULL,
	[AgeInDays] [int] NULL,
	[HL7SexCode] [char](1) NULL,
	[HL7EthnicGroupCode] [char](3) NULL,
	[Deceased] [bit] NULL,
	[Newborn] [bit] NULL,
	[HL7PatientClassCode] [char](1) NULL,
	[AttendingDoctor] [varchar](50) NULL,
	[TestingFacilityCode] [varchar](10) NULL,
	[ReferringRequestID] [varchar](25) NULL,
	[Therapy] [varchar](250) NULL,
	[LIMSAnalyzerCode] [varchar](10) NULL,
	[TargetTimeDays] [int] NULL,
	[TargetTimeMins] [int] NULL,
	[LIMSRejectionCode] [varchar](10) NULL,
	[LIMSRejectionDesc] [varchar](250) NULL,
	[LIMSFacilityCode] [varchar](15) NULL,
	[Repeated] [tinyint] NULL,
	[LIMSSpecimenID] [nvarchar](64) NULL,
	[LIMSPreReg_RegistrationDateTime] [datetime] NULL,
	[LIMSPreReg_ReceivedDateTime] [datetime] NULL,
	[LIMSPreReg_RegistrationFacilityCode] [varchar](15) NULL,
	[LIMSVendorCode] [varchar](4) NULL,
	[RequestingFacilityNationalCode] [varchar](15) NULL
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[VersionControl]    Script Date: 8/14/2019 1:46:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[VersionControl]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[VersionControl](
	[DateTimeStamp] [datetime] NULL,
	[VersionActivationDate] [datetime] NULL,
	[VERBase] [int] NULL,
	[VERUpdate] [int] NULL,
	[VERBuild] [int] NULL,
	[VersionStamp] [varchar](20) NULL
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
